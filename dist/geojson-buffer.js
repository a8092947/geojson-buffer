!function(a,b){typeof exports==='object'&&typeof module!=='undefined'?b(exports):typeof define==='function'&&define.amd?define(['exports'],b):(b((a.geojsonBuffer={})))}(this,(function(a){'use strict';function b(a,b){if(!(a instanceof b)){throw new TypeError("Cannot call a class as a function")}}function c(a,b){for(var c=0;c<b.length;c++){var d=b[c];d.enumerable=d.enumerable||!1;d.configurable=!0;"value" in d&&(d.writable=!0);Object.defineProperty(a,d.key,d)}}function d(a,b,d){b&&c(a.prototype,b);d&&c(a,d);return a}function e(a,b,c){var d=Math.sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y)),e=a.x+c*(b.y-a.y)/d,f=b.x+c*(b.y-a.y)/d,g=a.y+c*(a.x-b.x)/d,h=b.y+c*(a.x-b.x)/d;return[new o([e,g]),new o([f,h])]}function f(a,b,c,d,e,f,g,h){var i,j,k,l,m,n=[null,null];i=(h-f)*(c-a)-(g-e)*(d-b);if(i===0)return !1;j=b-f;k=a-e;l=(g-e)*j-(h-f)*k;m=(c-a)*j-(d-b)*k;j=l/i;k=m/i;n[0]=a+j*(c-a);n[1]=b+j*(d-b);return new o(n)}function g(a){return a*180/Math.PI}function h(a){return a*Math.PI/180}function i(a){var b=a%360;b<0&&(b+=360);return b}var j=6371008.8,k={centimeters:j*100,centimetres:j*100,degrees:180/Math.PI,feet:j*3.28084,inches:j*39.370,kilometers:j/1000,kilometres:j/1000,meters:j,metres:j,miles:j/1609.344,millimeters:j*1000,millimetres:j*1000,nauticalmiles:j/1852,radians:1,yards:j/1.0936};function l(a,b){var c=k[b||'kilometers'];return a/c}function m(a,b){b===null&&(b='kilometers');return g(l(a,b))}function n(a,b){var c=h(a.x),d=h(b.x),e=h(a.y),f=h(b.y),i=Math.sin(d-c)*Math.cos(f),j=Math.cos(e)*Math.sin(f)-Math.sin(e)*Math.cos(f)*Math.cos(d-c);return g(Math.atan2(i,j))}var o=function(){function a(c){b(this,a);this.x=c[0];this.y=c[1];this.radiansX=null;this.radiansY=null;this.calcRadiansForCoords();this.prevPoint=null;this.bearingPrevPoint=null;this.nextPoint=null;this.bearingNextPoint=null;this.angleBetweenPoints=null;this.isConcave=null}d(a,[{key:"calcRadiansForCoords",value:function a(){this.radiansX=h(this.x);this.radiansY=h(this.y)}},{key:"calcuateAnglesBetweeenPoints",value:function a(){this.bearingPrevPoint=n(this,this.prevPoint);this.bearingNextPoint=n(this,this.nextPoint);this.angleBetweenPoints=i(i(this.bearingNextPoint)-i(this.bearingPrevPoint));this.isConcave=this.angleBetweenPoints>180}}]);return a}();function q(a,b,c,d,e,f,g){switch(a){case 'round':return r(b,c,d,e,f,g)}}function r(a,b,c,d,e,f){return s(a,b,e,d,f,!1)}function s(a,b,c,d,e,f){var g=[],h=Math.PI*2,i=Math.atan2(c.y-a.y,c.x-a.x),j=Math.atan2(d.y-a.y,d.x-a.x);i<0&&(i+=h);j<0&&(j+=h);var k=i>j?i-j:i+h-j,l=(h-k)/e;for(var m=1;m<e+1;++m)k=i+l*m,g.push(new o([a.x+Math.cos(k)*b,a.y+Math.sin(k)*b]));return g}function t(a,b){var c=0;for(var d=0;d<b.length;d++){var e=b[d],f=d<b.length-1?b[d+1]:b[0];e.y<=a.y?(f.y>a.y&&(u(e,f,a)>0&&c++)):e.y<=a.y&&(u(e,f,a)<0&&c--)}return c}function u(a,b,c){return(b.x-a.x)*(c.y-a.y)-(c.x-a.x)*(b.y-a.y)}function v(a){if(process.env.NODE_ENV!=='development')return;var b=window.map,c=L.layerGroup([]).addTo(b);a.forEach(function(a){L.circleMarker([a.y,a.x],{color:a.isConcave?'red':'green'}).addTo(c)});c.remove()}function w(a){if(process.env.NODE_ENV!=='development')return;var b=window.map,c=L.layerGroup([]).addTo(b);a.forEach(function(a){var b=a.offsetPoint1;L.circleMarker([b.y,b.x],{color:a.point1WindingNumber>0?'red':'green'}).addTo(c)});c.remove()}var x=function(){function a(c){b(this,a);this.edges=[];this.points=[];this.isHole=c;this.outContour=[]}d(a,[{key:"offsetEdges",value:function b(a){for(var c=0;c<this.edges.length;c++)this.edges[c].offsetEdge(a),this.edges[c].constructOffsetRectangle()}},{key:"rejoinOffsetEdges",value:function c(a,b){for(var d=0;d<this.edges.length;d++){var e=this.edges[d],f=e.point1;if(f.isConcave)this.outContour.push(e.getIntersection(e.prevEdge));else{var g=q('round',e.point1,a,b,e.offsetPoint1,e.prevEdge.offsetPoint2,64);this.outContour=this.outContour.concat(g)}}}},{key:"calculateWindingNumbers",value:function a(){for(var b=0;b<this.edges.length;b++)console.log("wer"),this.edges[b].point1WindingNumber=t(this.edges[b].offsetPoint1,this.edges[b].offsetRegion);w(this.edges)}}]);return a}(),y=function(){function a(c,d){b(this,a);this.point1=c;this.point2=d;this.offsetPoint1=null;this.offsetPoint2=null;this.offsetRegion=[this.point1,this.offsetPoint1,this.offsetPoint2,this.point2]}d(a,[{key:"offsetEdge",value:function b(a){var c=e(this.point1,this.point2,a);this.offsetPoint1=c[0];this.offsetPoint2=c[1]}},{key:"getIntersection",value:function b(a){var c=f(this.offsetPoint1.x,this.offsetPoint1.y,this.offsetPoint2.x,this.offsetPoint2.y,a.offsetPoint1.x,a.offsetPoint1.y,a.offsetPoint2.x,a.offsetPoint2.y);return c}},{key:"constructOffsetRectangle",value:function a(){this.offsetRegion=[this.point1,this.offsetPoint1,this.offsetPoint2,this.point2]}}]);return a}();function z(a){var b=a.type==='Feature'?a.geometry:a,c=b.coordinates;(b.type==='Polygon'||b.type==='MultiLineString')&&(c=[c]);b.type==='LineString'&&(c=[[c]]);var d=[];for(var e=0;e<c[0].length;e++){var f=new x(e>0);d.push(f);var g=new o(c[0][e][0]),h=new o(c[0][e][1]),i=new o(c[0][e][2]);A(g,h,i);f.points.push(g);var j=new y(g,h);f.edges.push(j);var k=g,l=j;g=h;h=i;for(var m=2;m<c[0][e].length-2;m++){f.points.push(g);i=new o(c[0][e][m+1]);A(g,h,i);var n=new y(g,h);n.prevEdge=j;j.nextEdge=n;f.edges.push(n);g=h;h=i;j=n}A(g,h,k);var p=new y(j.point2,h);p.prevEdge=j;j.nextEdge=p;f.edges.push(p);var q=new y(h,k);q.prevEdge=p;p.nextEdge=q;l.prevEdge=q;q.nextEdge=l;f.edges.push(q);f.points.push(g);f.points.push(i)}v(d[0].points);return d}function A(a,b,c){b.prevPoint=a;b.nextPoint=c;b.calcuateAnglesBetweeenPoints()}function B(a,b,c,d){if(!a)throw new Error('geojson-buffer: Feature is required');if(b===undefined||b===null||isNaN(b))throw new Error('dgeojson-buffer: Distance is required');var e=a.type==='Feature'?a.geometry:a;if((e.type==='Point'||e.type==='MultiPoint'||e.type==='LineString'||e.type==='MultiLineString')&&b<0){throw new Error('geojson-buffer: If offsetting a point or linestring the distance must be positive')}var f=m(b,c),g=l(b,'degrees'),h=z(a);for(var i=0;i<h.length;i++)h[i].offsetEdges(f),h[i].rejoinOffsetEdges(f,g),h[i].calculateWindingNumbers();return h[0].outContour}a.bufferGeoJSON=B;Object.defineProperty(a,'__esModule',{value:!0})}))
